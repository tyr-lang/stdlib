with container.FlatArray;
with container.FlatArrayIterator
with io.CString
with io.System
with string.toStringadr

/**
 * Allows printing and retrieving of stack traces.
 *
 * @note the gnu crap is as always very disappointing; there is no way to read
 *       the nice stack from the DWARF data from the loaded executable directly
 *
 * @note requires decoding with addr2line for the moment
 */
public type stacktrace {

  type def backtrace(traces : FlatArray[observablePointer], size : int) : int extern c.backtrace;
  type def backtraceSymbols(traces : FlatArray[observablePointer], size : int) : FlatArray[CString] extern c.backtrace_symbols;


  public type def print(maxDepth : int = 128) {
    var traces = new FlatArray[observablePointer](maxDepth)

    var count = backtrace(traces, maxDepth);
    var symbols = backtraceSymbols(traces, count);

    new FlatArrayIterator[CString](symbols, count).foreach c do {
      System.out.put(c)
      System.out.put("\n")
    }

    delete traces
    delete symbols
  }

  test "use" {
    print()
  }
}