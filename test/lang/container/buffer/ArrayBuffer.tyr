with Buffer := tyr.lang.container.ArrayBuffer
with tyr.lang.container.range

type ArrayBuffer {

  test "remove umlauts" {
    var buff = "HÖLLä".chars().toBuffer()
    val removed = int !! buff.removeIf c do (c > 'L')

    val r : bool = "HLL".chars().sameElements[character.`==`](buff.iterator())
    delete buff
    r && 2 == removed
  }

  test "remove more" {
    var buff = "HÖLLä".chars().toBuffer()
    val removed = int !! buff.removeIf c do (c >= 'L')

    val r : bool = !"HLL".chars().sameElements[character.`==`](buff.iterator())
    delete buff
    r && 4 == removed
  }

  test "loop" {
    var xs = new Buffer[String]
    var r = xs.empty()

    range(0, 100).foreach i do {
      xs += ""
    }

    r &= 100U == xs.size()

    range(0, 100).foreach i do {
      r &= "" == xs.removeLast()
    }

    r &= xs.empty()
    delete xs
    r
  }

  test "count" {
    var xs = new Buffer[String]
    var r = xs.empty()

    range(0, 100).foreach i do {
      xs += ""
    }

    r &= 100U == xs.size()
    r &= (100U == xs.count x do (true))

    range(0, 100).foreach i do {
      r &= "" == xs.removeLast()
    }

    r &= xs.empty()
    r &= 0U == xs.count x do (true)

    delete xs
    r
  }
}
