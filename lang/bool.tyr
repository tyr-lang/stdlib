/**
 * The type of truth values.
 */
type bool <: native {
	def ! : bool <: native;
	def | (right : bool) : bool <: native;
	def & (right : bool) : bool <: native;
	
	def || (right : bool) : bool <: native;
	def && (right : bool) : bool <: native;

  // TODO add "def ? (T : Type <: infered, condition : bool, thenBranch : Block[T], elseBranch : Block[T]) : T { if(condition) thenBranch else elseBranch }"
}
