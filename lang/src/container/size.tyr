/**
 * The type used for size() in sized containers.
 */
public type size_t := Unsigned[64];

/**
 * The type can be used to allow arbitrary integer literals to be passed as
 * parameter.
 *
 * @note instances cannot be created and it has no operation whatsoever to avoid
 *       unwanted implicit conversions
 *
 * @note if signed indices were correct for a container type, this can still be
 *       realized with index_t and a sign call, because Integer.implicit will
 *       sign extend values on conversion.
 *
 * @todo CT type evaluation in Tyr 0.9 should be able to handle this
 *
 * @todo remove implicits to this type and implement all such implicits with
 *   implicit from once we can have template implicits and have type inference
 *   for them
 */
public type index_t {
  public val unpack : size_t;
}
