/**
 * Anything that inherits this property is handled by the compiler directly.
 * If an entity has this property and is not known by the compiler, the package
 * will be rejected.
 *
 * @author Timm Felden
 */
property native;


/**
 * Iff overload resolution fails on a type with this property, another attempt
 * is performed in T. This behaviour is recursive.
 *
 * @note there is currently no cycle checking
 *
 * @note proxy[T] should be used in conjunction with def implicit : T
 *
 * @author Timm Felden
 */
property proxy[T : Type];


/**
 * A compile-time value. An application of a CT function on CT operands can and
 * should be evaluated at compile time.
 *
 * @note the compiler is free to tag a function whose implementation
 * depends only on CT operands and its parameters and that has only applications
 * of CT functions in its body CT. (note: in case of dependency SCCs, this
 * property has to hold for every member of the the SCC in order to turn the
 * whole SCC CT)
 *
 * @author Timm Felden
 */
property CT;


/**
 * An instance of this type cannot be a var.
 * This will cause a var with this infered type to T, if the target has an
 * isVal[T] property or be upcasted to its supertype  until a type is found that
 * does not have a noVar property.
 *
 * This property allows usage of types such as "var x = 0; x = x + 1".
 *
 * @author Timm Felden
 */
property noVar;


/**
 * Flags a function to be an entry point to the program.
 *
 * @author Timm Felden
 */
property entryPoint;
